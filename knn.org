#   <Steps K-Nearest Neighbour-Clustering algorithm>
#    Copyright (C) <2010>  <Authors : Dharini,Hariharan,Guruprasad,Kunal,Kiran>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.


* Algorithm For K-Nearest Neighbour Clustering algorithm.
** INPUT:
1) Numpy ndarray of "k" centroid images.
2) A new image point.
3) Cluster of images (Initially equal to the centroid array ; If centroid image is taken as a face from the set).
** OUTPUT:
1) Updated set of "k" centoid images.
2) Updated cluster , with the new image point appended to the cluster, it is closest to.
** ALGORITHM :
*** Select Centroids.
*** When adding a new point to the centroid, 
- find the closest centroid using an appropriate "distance metric".
*** Add the point to the centroid's cluster.
*** Update the centroid (Maybe use the mean of all images in the cluster).
*** Repeat last THREE steps , till no point switches clusters.
*** At the end of the algorithm we get K - Clusters with "n" (which can vary) images in each cluster.
